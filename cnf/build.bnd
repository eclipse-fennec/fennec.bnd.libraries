javac.source: 17
javac.target: 17

-plugin.1.Sonatype: \
	aQute.bnd.repository.maven.provider.MavenBndRepository;\
		snapshotUrl		= https://central.sonatype.com/repository/maven-snapshots/;\
		releaseUrl		= https://oss.sonatype.org/service/local/staging/deploy/maven2/;\
		index			= ${.}/sonatype.maven;\
		name			= 'Sonatype'

-releaserepo: Sonatype

-plugin.3.Central: \
    aQute.bnd.repository.maven.provider.MavenBndRepository; \
        snapshotUrl=https://oss.sonatype.org/content/repositories/snapshots/; \
        releaseUrl=https://repo1.maven.apache.org/maven2/; \
        index=${.}/central.maven; \
        readOnly=true; \
        poll.time=-1; \
        name="Central"

-plugin.0.Local: \
	aQute.bnd.deployer.repository.LocalIndexedRepo; \
		name = Local; \
		pretty = true; \
		local = ${build}/local
		
-plugin.1.Temp: \
	aQute.bnd.deployer.repository.LocalIndexedRepo; \
		name = Temp; \
		pretty = true; \
		local = ${build}/cache/temp
        
-groupid: org.eclipse.fennec.bnd

base-version: 0.0.1.SNAPSHOT

github-project: fennec.bnd.libraries

category: ccc/Eclipse Fennec Bndtools Standard Templates
osgi-test-category: ccc/OSGi-Test & JUnit5 Jupiter

# Find out if the current Bundle Version is already deployed in any repository (excluding the Workspace)
releaseNotNeeded: ${findproviders;osgi.identity;(&(osgi.identity=${bsn})(version=${Bundle-Version}));REPOS}

# If release not needed is empty, no Bundle has been found and for maven we do a release to the remote Repo. If not, we only do a release to the local .m2 Repo
-maven-release.local: ${if;${def;releaseNotNeeded};local;remote}
ossrh: ${env;OSSRH_USERNAME}
-connections-settings: \
	github;\
		id="https://central.sonatype.com";\
		username=${env;OSSRH_USERNAME};\
		password=${env;OSSRH_PASSWORD}
		
